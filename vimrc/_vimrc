" _vimrc

"########################################
" HEADER
"########################################
"----------------------------------------
" ###
"----------------------------------------
if &compatible
  set nocompatible
endif
filetype plugin indent on


"----------------------------------------
" Windows, unixでのruntimepathの違いを吸収するためのもの。 
" $MY_VIMRUNTIMEはユーザーランタイムディレクトリを示す。 
" :echo $MY_VIMRUNTIMEで実際のパスを確認できます。 
"----------------------------------------
if isdirectory($HOME . '/.vim') 
  let $MY_VIMRUNTIME = $HOME.'/.vim' 
elseif isdirectory($HOME . '\vimfiles') 
  let $MY_VIMRUNTIME = $HOME.'\vimfiles' 
elseif isdirectory($VIM . '\vimfiles') 
  let $MY_VIMRUNTIME = $VIM.'\vimfiles' 
endif 
" ランタイムパスを通す必要のあるプラグインを使用する場合
" $MY_VIMRUNTIMEを使用すると Windows/Linuxで切り分ける必要が無くなります。 
" 例) vimfiles/qfixapp (Linuxでは~/.vim/qfixapp)にランタイムパスを通す場合 
"set runtimepath+=$MY_VIMRUNTIME/qfixapp


"----------------------------------------
" ファイルの読み書き
"----------------------------------------
" 読み込み時の文字コード判定リスト（先頭優先）
set fileencodings=iso-2022-jp,cp932,sjis,euc-jp,utf-8
" 書き込み時の文字コードの指定
set fileencoding=utf-8
" 開いているファイルの文字コードをUFT-8に変更する
set fenc=utf-8
" バックアップファイルを作らない
set nobackup
" スワップファイルを作らない
set noswapfile
" 再読込、vim終了後も継続するアンドゥ用ファイルを作らない
set noundofile
" クリップボードを共有
set clipboard+=unnamed
" バッファが編集中でもその他のファイルを開けるように
set hidden


"########################################
" 見た目の設定
"########################################
"----------------------------------------
" 基本的な表示項目, 強調表示
"----------------------------------------
" タイトルを表示
set title
" 行番号を表示
set number
" 入力中のコマンドをステータスに表示する
set showcmd
" 現在の行を強調表示
set cursorline
" 現在の行を強調表示（縦）
"set cursorcolumn
" 括弧入力時の対応する括弧を表示
set showmatch
" 画面最後の行をできる限り表示する
set display=lastline
" ステータスラインを常に表示
set laststatus=2


"----------------------------------------
" 音声
"----------------------------------------
" エラー時の音とビジュアルベルの抑制(gvimは.gvimrcで設定)
set noerrorbells
set novisualbell
set visualbell t_vb=


"----------------------------------------
" テキストの色
"----------------------------------------
" ハイライトを有効にする
" （on: デフォルト設定を使用する, enable: 有効にするだけ）
syntax enable
set t_Co=256
" カラースキーマ
" .vim/colors にダウンロードして使用
" gvimの色テーマは.gvimrcで指定する
colorscheme tender
"set background=dark

" 見辛い箇所の色を変更する
highlight Comment ctermfg=102
highlight Visual ctermbg=91
"highlight LineNr ctermfg=55
"highlight CursorLineNr ctermfg=124

" 全角スペースの hilight だけ目立つ色に変更する
hi DoubleByteSpace term=underline ctermbg=red guibg=red
match DoubleByteSpace /　/


"----------------------------------------
" テキスト表示
"----------------------------------------
" テキストの折り返し表示
set wrap
" Tab, 行末の半角スペースを明示的に表示する
" （タブが「▸-」, 半角スペースが「~」と表示される）
set list
set listchars=tab:\▸\-,trail:~,extends:»,precedes:«
" 自動改行を無しにする
autocmd FileType text setlocal textwidth=0

"----------------------------------------
" Tab, インデント
"----------------------------------------
" Tab文字を半角スペースにする
set expandtab
" 行頭以外のTab文字の表示幅（スペースいくつ分）
set tabstop=2
" 行頭でのTab文字の表示幅
set shiftwidth=2
" 自動的にインデントする
set autoindent
" スマートインデントを有効にする
set smartindent



"########################################
" 操作の設定
"########################################
"----------------------------------------
" カーソル移動
"----------------------------------------
" 行末の1文字先までカーソルを移動できるように
set virtualedit=onemore
" 折り返し時に表示行単位での移動できるようにする
nnoremap j gj
nnoremap k gk
" Visual blockモードでフリーカーソルを有効にする
set virtualedit=block
" カーソルキーで行末／行頭の移動可能に設定
set whichwrap=b,s,[,],<,>
" □や○の文字があってもカーソル位置がずれないようにする
set ambiwidth=double
" マウスを有効にする
if has('mouse')
  set mouse=a
endif


"----------------------------------------
" テキスト入力
"----------------------------------------
" バックスペースでインデントや改行を削除できるようにする
set backspace=indent,eol,start
" 日本語の行の連結時には空白を入力しない
set formatoptions+=mM


"########################################
" コマンドの設定
"########################################
"----------------------------------------
" コマンド入力
"----------------------------------------
" コマンドラインでTABキーによるファイル名補完を有効にする
set wildmenu
" ファイル名補完の挙動の指定
set wildmode=list:longest,full
" コマンドラインで保存する履歴件数
set history=10000


"----------------------------------------
" 検索
"----------------------------------------
" 検索文字列が小文字の場合は大文字小文字を区別なく検索する
set ignorecase
" 検索文字列に大文字が含まれている場合は区別して検索する
set smartcase
" 検索文字列入力時に順次対象文字列にヒットさせる
set incsearch
" 検索時に最後まで行ったら最初に戻る
set wrapscan
" 検索語をハイライト表示
set hlsearch
" ESC連打でハイライト解除
nmap <Esc><Esc> :nohlsearch<CR><Esc>


